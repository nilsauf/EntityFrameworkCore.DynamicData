name: .NET Build + Release

on:
  push: 
    branches: [ develop ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ main, develop ]

env:
  configuration: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3.2.0
      with:
        dotnet-version: | 
          6.0.x
          7.0.x
          8.0.x

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.10.2
      with:
        versionSpec: '5.x'
          
    - name: Restore dependencies
      run: dotnet restore
      working-directory: .
      
    - name: Build
      run: dotnet build --no-restore
      working-directory: .
      
    - name: Test
      run: dotnet test --no-build --verbosity normal
      working-directory: .
      
    - name: Pack
      run: dotnet pack --no-build -v:minimal -c:${{ env.configuration }}
      working-directory: .

    - name: Create NuGet Artifacts
      uses: actions/upload-artifact@v3.1.3
      with:
        name: nuget
        path: '**/*.nupkg'

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref_name == 'main' && github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true

    permissions:
      contents: write

    steps:
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.10.2
      with:
        versionSpec: '5.x'

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download NuGet Packages
      uses: actions/download-artifact@v3
      with:
        name: nuget  

    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.10.2
      id: version
      with:
        useConfigFile: true
        
    - name: Changelog
      uses: glennawatson/ChangeLog@v1
      id: changelog

    - name: Create Release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
          tag_name: ${{ steps.version.outputs.SemVer }}
          release_name: ${{ steps.version.outputs.SemVer }}
          body: |
            ${{ steps.changelog.outputs.commitLog }}

    - name: NuGet Push
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.NUGET_API_KEY }} # Set nuget api token in repository secrets
        SOURCE_URL: https://api.nuget.org/v3/index.json
      run: |
        dotnet nuget push -s ${{ env.SOURCE_URL }} -k ${{ env.NUGET_AUTH_TOKEN }} **/*.nupkg
